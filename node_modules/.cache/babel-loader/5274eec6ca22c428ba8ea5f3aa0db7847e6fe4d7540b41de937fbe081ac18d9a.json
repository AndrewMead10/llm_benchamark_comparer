{"ast":null,"code":"var _jsxFileName = \"/Users/mariagorskikh/hackathon moestro/ai-model-advisor/src/components/ComparisonChart.js\";\nimport React from 'react';\nimport { Chart as ChartJS, RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend } from 'chart.js';\nimport { Radar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend);\nconst ComparisonChart = ({\n  models\n}) => {\n  const colors = ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)'];\n\n  // Normalize execution time (lower is better)\n  const maxExecutionTime = Math.max(...models.map(model => model.executionTime || 0));\n  const normalizeExecutionTime = time => maxExecutionTime ? 5 * (1 - time / maxExecutionTime) + 1 : 3;\n\n  // Normalize cost (lower is better)\n  const maxCost = Math.max(...models.map(model => model.costEstimate || 0));\n  const normalizeCost = cost => maxCost ? 5 * (1 - cost / maxCost) + 1 : 3;\n  const data = {\n    labels: ['Quality', 'Speed', 'Cost Efficiency', 'Provider Reliability', 'Feature Coverage'],\n    datasets: models.map((model, index) => ({\n      label: model.name || 'Unknown Model',\n      data: [model.accuracy || 3, normalizeExecutionTime(model.executionTime || 3), normalizeCost(model.costEstimate || 3), 4.2,\n      // Placeholder for provider reliability\n      4.0 // Placeholder for feature coverage\n      ],\n      backgroundColor: colors[index % colors.length],\n      borderColor: colors[index % colors.length].replace('0.6', '1'),\n      borderWidth: 1\n    }))\n  };\n  const options = {\n    scales: {\n      r: {\n        min: 0,\n        max: 5,\n        ticks: {\n          stepSize: 1,\n          display: false\n        },\n        pointLabels: {\n          font: {\n            size: 12\n          }\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          title: function (context) {\n            return context[0].dataset.label;\n          },\n          label: function (context) {\n            const metric = context.chart.data.labels[context.dataIndex];\n            let value = context.raw.toFixed(1);\n            if (metric === 'Speed') {\n              const executionTime = models[context.datasetIndex].executionTime;\n              return `${metric}: ${value}/5 (${executionTime === null || executionTime === void 0 ? void 0 : executionTime.toFixed(2)}s)`;\n            } else if (metric === 'Cost Efficiency') {\n              const cost = models[context.datasetIndex].costEstimate;\n              return `${metric}: ${value}/5 ($${cost === null || cost === void 0 ? void 0 : cost.toFixed(4)})`;\n            }\n            return `${metric}: ${value}/5`;\n          }\n        }\n      }\n    },\n    maintainAspectRatio: false\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-medium text-gray-900 mb-4\",\n      children: \"Performance Comparison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-80\",\n      children: /*#__PURE__*/_jsxDEV(Radar, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500 italic\",\n        children: \"Note: Provider Reliability and Feature Coverage are estimated values based on general model characteristics.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_c = ComparisonChart;\nexport default ComparisonChart;\nvar _c;\n$RefreshReg$(_c, \"ComparisonChart\");","map":{"version":3,"names":["React","Chart","ChartJS","RadialLinearScale","PointElement","LineElement","Filler","Tooltip","Legend","Radar","jsxDEV","_jsxDEV","register","ComparisonChart","models","colors","maxExecutionTime","Math","max","map","model","executionTime","normalizeExecutionTime","time","maxCost","costEstimate","normalizeCost","cost","data","labels","datasets","index","label","name","accuracy","backgroundColor","length","borderColor","replace","borderWidth","options","scales","r","min","ticks","stepSize","display","pointLabels","font","size","plugins","legend","position","tooltip","callbacks","title","context","dataset","metric","chart","dataIndex","value","raw","toFixed","datasetIndex","maintainAspectRatio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mariagorskikh/hackathon moestro/ai-model-advisor/src/components/ComparisonChart.js"],"sourcesContent":["import React from 'react';\nimport { Chart as ChartJS, RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend } from 'chart.js';\nimport { Radar } from 'react-chartjs-2';\n\nChartJS.register(RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend);\n\nconst ComparisonChart = ({ models }) => {\n  const colors = [\n    'rgba(255, 99, 132, 0.6)',\n    'rgba(54, 162, 235, 0.6)',\n    'rgba(255, 206, 86, 0.6)',\n    'rgba(75, 192, 192, 0.6)',\n    'rgba(153, 102, 255, 0.6)',\n  ];\n\n  // Normalize execution time (lower is better)\n  const maxExecutionTime = Math.max(...models.map(model => model.executionTime || 0));\n  const normalizeExecutionTime = (time) => maxExecutionTime ? 5 * (1 - (time / maxExecutionTime)) + 1 : 3;\n  \n  // Normalize cost (lower is better)\n  const maxCost = Math.max(...models.map(model => model.costEstimate || 0));\n  const normalizeCost = (cost) => maxCost ? 5 * (1 - (cost / maxCost)) + 1 : 3;\n\n  const data = {\n    labels: ['Quality', 'Speed', 'Cost Efficiency', 'Provider Reliability', 'Feature Coverage'],\n    datasets: models.map((model, index) => ({\n      label: model.name || 'Unknown Model',\n      data: [\n        model.accuracy || 3,\n        normalizeExecutionTime(model.executionTime || 3),\n        normalizeCost(model.costEstimate || 3),\n        4.2, // Placeholder for provider reliability\n        4.0, // Placeholder for feature coverage\n      ],\n      backgroundColor: colors[index % colors.length],\n      borderColor: colors[index % colors.length].replace('0.6', '1'),\n      borderWidth: 1,\n    })),\n  };\n\n  const options = {\n    scales: {\n      r: {\n        min: 0,\n        max: 5,\n        ticks: {\n          stepSize: 1,\n          display: false,\n        },\n        pointLabels: {\n          font: {\n            size: 12\n          }\n        }\n      },\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      tooltip: {\n        callbacks: {\n          title: function(context) {\n            return context[0].dataset.label;\n          },\n          label: function(context) {\n            const metric = context.chart.data.labels[context.dataIndex];\n            let value = context.raw.toFixed(1);\n            \n            if (metric === 'Speed') {\n              const executionTime = models[context.datasetIndex].executionTime;\n              return `${metric}: ${value}/5 (${executionTime?.toFixed(2)}s)`;\n            } else if (metric === 'Cost Efficiency') {\n              const cost = models[context.datasetIndex].costEstimate;\n              return `${metric}: ${value}/5 ($${cost?.toFixed(4)})`;\n            }\n            \n            return `${metric}: ${value}/5`;\n          },\n        },\n      },\n    },\n    maintainAspectRatio: false,\n  };\n\n  return (\n    <div className=\"bg-white p-4 rounded-lg shadow-md\">\n      <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Performance Comparison</h3>\n      <div className=\"h-80\">\n        <Radar data={data} options={options} />\n      </div>\n      <div className=\"mt-4\">\n        <p className=\"text-xs text-gray-500 italic\">\n          Note: Provider Reliability and Feature Coverage are estimated values based on general model characteristics.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ComparisonChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}