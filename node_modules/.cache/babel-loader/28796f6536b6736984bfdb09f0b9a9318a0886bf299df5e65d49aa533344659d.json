{"ast":null,"code":"var _jsxFileName = \"/Users/mariagorskikh/hackathon moestro/ai-model-advisor/src/components/AdvisorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { aiModels } from '../data/aiModels';\nimport ModelCard from './ModelCard';\nimport ComparisonChart from './ComparisonChart';\nimport ResultsComparison from './ResultsComparison';\n\n// OpenRouter model mapping for a subset of our models\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OPENROUTER_MODEL_MAPPING = {\n  1: \"openai/gpt-4-turbo\",\n  // GPT-4\n  2: \"anthropic/claude-3-opus\",\n  // Claude 3 Opus\n  4: \"google/gemini-pro\",\n  // Gemini Pro\n  5: \"meta-llama/llama-3-70b-instruct\",\n  // Llama 3\n  8: \"openai/gpt-3.5-turbo\",\n  // GPT-3.5 Turbo \n  10: \"mistralai/mistral-7b-instruct\" // Mistral 7B\n};\nconst OPENROUTER_API_KEY = \"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\";\nconst AdvisorPage = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [selectedModels, setSelectedModels] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isSearched, setIsSearched] = useState(false);\n  const handlePromptChange = e => {\n    setPrompt(e.target.value);\n  };\n  const handleModelToggle = modelId => {\n    setSelectedModels(prev => {\n      if (prev.includes(modelId)) {\n        return prev.filter(id => id !== modelId);\n      } else {\n        return [...prev, modelId];\n      }\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (prompt.trim() === '') {\n      alert('Please enter what you want to use AI for');\n      return;\n    }\n    if (selectedModels.length === 0) {\n      alert('Please select at least one AI model to test');\n      return;\n    }\n    setLoading(true);\n    try {\n      // Filter for only supported models\n      const supportedModels = selectedModels.filter(id => OPENROUTER_MODEL_MAPPING[id]);\n      if (supportedModels.length === 0) {\n        alert('None of the selected models are supported by OpenRouter. Please select different models.');\n        setLoading(false);\n        return;\n      }\n      if (supportedModels.length < selectedModels.length) {\n        alert(`Some selected models are not available through OpenRouter and will be skipped.`);\n      }\n\n      // Call real OpenRouter API\n      const testResults = await Promise.all(supportedModels.map(id => callOpenRouterModel(prompt, id)));\n      setResults(testResults.filter(result => result !== null));\n      setIsSearched(true);\n    } catch (error) {\n      console.error('Error testing models:', error);\n      alert('An error occurred while testing the models. Please check the console for details.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Make a real call to OpenRouter API\n  const callOpenRouterModel = async (userPrompt, modelId) => {\n    const model = aiModels.find(m => m.id === modelId);\n    const openRouterModel = OPENROUTER_MODEL_MAPPING[modelId];\n    if (!openRouterModel) {\n      return null;\n    }\n    const startTime = Date.now();\n    try {\n      var _data$choices$, _data$choices$$messag, _data$usage, _data$usage2;\n      const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\n          'HTTP-Referer': window.location.origin,\n          'X-Title': 'AI Model Advisor'\n        },\n        body: JSON.stringify({\n          model: openRouterModel,\n          messages: [{\n            role: 'user',\n            content: userPrompt\n          }],\n          max_tokens: 500\n        })\n      });\n      const endTime = Date.now();\n      const executionTime = (endTime - startTime) / 1000; // Convert to seconds\n\n      if (!response.ok) {\n        var _errorData$error;\n        const errorData = await response.json();\n        console.error(`Error from OpenRouter (${model.name}):`, errorData);\n        return {\n          model,\n          prompt: userPrompt,\n          output: `Error from ${model.name}: ${((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || 'Unknown error'}`,\n          metrics: {\n            executionTime: executionTime.toFixed(2),\n            tokenCount: 0,\n            costEstimate: '0.0000',\n            quality: 0\n          }\n        };\n      }\n      const data = await response.json();\n      return {\n        model,\n        prompt: userPrompt,\n        output: ((_data$choices$ = data.choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content) || 'No response content',\n        metrics: {\n          executionTime: executionTime.toFixed(2),\n          tokenCount: ((_data$usage = data.usage) === null || _data$usage === void 0 ? void 0 : _data$usage.total_tokens) || 0,\n          costEstimate: ((((_data$usage2 = data.usage) === null || _data$usage2 === void 0 ? void 0 : _data$usage2.total_tokens) || 0) * 0.00002).toFixed(4),\n          // Rough estimate\n          quality: model.accuracy // Using the model's base accuracy as proxy\n        }\n      };\n    } catch (error) {\n      console.error(`Error calling ${model.name}:`, error);\n      return {\n        model,\n        prompt: userPrompt,\n        output: `Error: Could not get a response from ${model.name}. ${error.message}`,\n        metrics: {\n          executionTime: '0.00',\n          tokenCount: 0,\n          costEstimate: '0.0000',\n          quality: 0\n        }\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-extrabold text-gray-900 sm:text-5xl sm:tracking-tight lg:text-6xl\",\n        children: \"Compare AI Model Outputs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-5 max-w-xl mx-auto text-xl text-gray-500\",\n        children: \"Test multiple AI models with your specific use case and compare their performance.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-xl rounded-lg overflow-hidden mb-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-5 sm:p-6\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"prompt\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"What would you like to use AI for? (Describe your needs)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1\",\n                children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"prompt\",\n                  name: \"prompt\",\n                  rows: 4,\n                  className: \"shadow-sm focus:ring-primary-500 focus:border-primary-500 block w-full sm:text-sm border-gray-300 rounded-md\",\n                  placeholder: \"e.g., I want to build a customer service chatbot that can handle basic inquiries and route complex questions to human agents.\",\n                  value: prompt,\n                  onChange: handlePromptChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-3\",\n                children: \"Select models to test\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3\",\n                children: aiModels.map(model => {\n                  const isSupported = OPENROUTER_MODEL_MAPPING[model.id] !== undefined;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"relative flex items-start\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center h-5\",\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        id: `model-${model.id}`,\n                        name: `model-${model.id}`,\n                        type: \"checkbox\",\n                        checked: selectedModels.includes(model.id),\n                        onChange: () => handleModelToggle(model.id),\n                        className: `focus:ring-primary-500 h-4 w-4 text-primary-600 border-gray-300 rounded ${isSupported ? '' : 'opacity-50'}`,\n                        disabled: !isSupported\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ml-3 text-sm\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: `model-${model.id}`,\n                        className: `font-medium ${isSupported ? 'text-gray-700' : 'text-gray-400'}`,\n                        children: [model.name, \" \", !isSupported && '(not available)']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: `${isSupported ? 'text-gray-500' : 'text-gray-400'}`,\n                        children: [model.provider, \" \\u2022 \", model.type]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 25\n                    }, this)]\n                  }, model.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-2 text-xs text-gray-500\",\n                children: \"Using OpenRouter API to access these models. Some models may not be available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: loading,\n                className: `w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white \n                    ${loading ? 'bg-gray-400' : 'bg-gradient-to-r from-primary-600 to-secondary-600 hover:from-primary-700 hover:to-secondary-700'} \n                    focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500`,\n                children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"animate-spin -ml-1 mr-3 h-5 w-5 text-white\",\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                      className: \"opacity-25\",\n                      cx: \"12\",\n                      cy: \"12\",\n                      r: \"10\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                      className: \"opacity-75\",\n                      fill: \"currentColor\",\n                      d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 23\n                  }, this), \"Testing Models...\"]\n                }, void 0, true) : 'Test Selected Models'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), isSearched && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-xl rounded-lg overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-5 sm:p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-gray-900 mb-4\",\n            children: \"Test Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), results.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 mb-6\",\n              children: [\"Here are the results from testing \", results.length, \" AI models with your prompt.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this), results.length >= 2 && /*#__PURE__*/_jsxDEV(ComparisonChart, {\n              models: results.map(r => ({\n                ...r.model,\n                accuracy: r.metrics.quality,\n                executionTime: parseFloat(r.metrics.executionTime),\n                costEstimate: parseFloat(r.metrics.costEstimate) * 1000 // Convert to millicents for display\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(ResultsComparison, {\n              results: results,\n              prompt: prompt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-12\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500\",\n              children: \"No results available. Please try testing with different models.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvisorPage, \"lageKY/qhhzODnS/ElshldXExVM=\");\n_c = AdvisorPage;\nexport default AdvisorPage;\nvar _c;\n$RefreshReg$(_c, \"AdvisorPage\");","map":{"version":3,"names":["React","useState","aiModels","ModelCard","ComparisonChart","ResultsComparison","jsxDEV","_jsxDEV","Fragment","_Fragment","OPENROUTER_MODEL_MAPPING","OPENROUTER_API_KEY","AdvisorPage","_s","prompt","setPrompt","selectedModels","setSelectedModels","results","setResults","loading","setLoading","isSearched","setIsSearched","handlePromptChange","e","target","value","handleModelToggle","modelId","prev","includes","filter","id","handleSubmit","preventDefault","trim","alert","length","supportedModels","testResults","Promise","all","map","callOpenRouterModel","result","error","console","userPrompt","model","find","m","openRouterModel","startTime","Date","now","_data$choices$","_data$choices$$messag","_data$usage","_data$usage2","response","fetch","method","headers","window","location","origin","body","JSON","stringify","messages","role","content","max_tokens","endTime","executionTime","ok","_errorData$error","errorData","json","name","output","message","metrics","toFixed","tokenCount","costEstimate","quality","data","choices","usage","total_tokens","accuracy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","rows","placeholder","onChange","isSupported","undefined","type","checked","disabled","provider","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","models","parseFloat","_c","$RefreshReg$"],"sources":["/Users/mariagorskikh/hackathon moestro/ai-model-advisor/src/components/AdvisorPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { aiModels } from '../data/aiModels';\nimport ModelCard from './ModelCard';\nimport ComparisonChart from './ComparisonChart';\nimport ResultsComparison from './ResultsComparison';\n\n// OpenRouter model mapping for a subset of our models\nconst OPENROUTER_MODEL_MAPPING = {\n  1: \"openai/gpt-4-turbo\", // GPT-4\n  2: \"anthropic/claude-3-opus\", // Claude 3 Opus\n  4: \"google/gemini-pro\", // Gemini Pro\n  5: \"meta-llama/llama-3-70b-instruct\", // Llama 3\n  8: \"openai/gpt-3.5-turbo\", // GPT-3.5 Turbo \n  10: \"mistralai/mistral-7b-instruct\" // Mistral 7B\n};\n\nconst OPENROUTER_API_KEY = \"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\";\n\nconst AdvisorPage = () => {\n  const [prompt, setPrompt] = useState('');\n  const [selectedModels, setSelectedModels] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isSearched, setIsSearched] = useState(false);\n  \n  const handlePromptChange = (e) => {\n    setPrompt(e.target.value);\n  };\n  \n  const handleModelToggle = (modelId) => {\n    setSelectedModels(prev => {\n      if (prev.includes(modelId)) {\n        return prev.filter(id => id !== modelId);\n      } else {\n        return [...prev, modelId];\n      }\n    });\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (prompt.trim() === '') {\n      alert('Please enter what you want to use AI for');\n      return;\n    }\n    \n    if (selectedModels.length === 0) {\n      alert('Please select at least one AI model to test');\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      // Filter for only supported models\n      const supportedModels = selectedModels.filter(id => OPENROUTER_MODEL_MAPPING[id]);\n      \n      if (supportedModels.length === 0) {\n        alert('None of the selected models are supported by OpenRouter. Please select different models.');\n        setLoading(false);\n        return;\n      }\n      \n      if (supportedModels.length < selectedModels.length) {\n        alert(`Some selected models are not available through OpenRouter and will be skipped.`);\n      }\n      \n      // Call real OpenRouter API\n      const testResults = await Promise.all(\n        supportedModels.map(id => callOpenRouterModel(prompt, id))\n      );\n      \n      setResults(testResults.filter(result => result !== null));\n      setIsSearched(true);\n    } catch (error) {\n      console.error('Error testing models:', error);\n      alert('An error occurred while testing the models. Please check the console for details.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Make a real call to OpenRouter API\n  const callOpenRouterModel = async (userPrompt, modelId) => {\n    const model = aiModels.find(m => m.id === modelId);\n    const openRouterModel = OPENROUTER_MODEL_MAPPING[modelId];\n    \n    if (!openRouterModel) {\n      return null;\n    }\n    \n    const startTime = Date.now();\n    \n    try {\n      const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\n          'HTTP-Referer': window.location.origin,\n          'X-Title': 'AI Model Advisor'\n        },\n        body: JSON.stringify({\n          model: openRouterModel,\n          messages: [\n            {\n              role: 'user',\n              content: userPrompt\n            }\n          ],\n          max_tokens: 500,\n        })\n      });\n      \n      const endTime = Date.now();\n      const executionTime = (endTime - startTime) / 1000; // Convert to seconds\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error(`Error from OpenRouter (${model.name}):`, errorData);\n        return {\n          model,\n          prompt: userPrompt,\n          output: `Error from ${model.name}: ${errorData.error?.message || 'Unknown error'}`,\n          metrics: {\n            executionTime: executionTime.toFixed(2),\n            tokenCount: 0,\n            costEstimate: '0.0000',\n            quality: 0\n          }\n        };\n      }\n      \n      const data = await response.json();\n      \n      return {\n        model,\n        prompt: userPrompt,\n        output: data.choices[0]?.message?.content || 'No response content',\n        metrics: {\n          executionTime: executionTime.toFixed(2),\n          tokenCount: data.usage?.total_tokens || 0,\n          costEstimate: ((data.usage?.total_tokens || 0) * 0.00002).toFixed(4), // Rough estimate\n          quality: model.accuracy // Using the model's base accuracy as proxy\n        }\n      };\n    } catch (error) {\n      console.error(`Error calling ${model.name}:`, error);\n      return {\n        model,\n        prompt: userPrompt,\n        output: `Error: Could not get a response from ${model.name}. ${error.message}`,\n        metrics: {\n          executionTime: '0.00',\n          tokenCount: 0,\n          costEstimate: '0.0000',\n          quality: 0\n        }\n      };\n    }\n  };\n  \n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <div className=\"text-center mb-12\">\n        <h1 className=\"text-4xl font-extrabold text-gray-900 sm:text-5xl sm:tracking-tight lg:text-6xl\">\n          Compare AI Model Outputs\n        </h1>\n        <p className=\"mt-5 max-w-xl mx-auto text-xl text-gray-500\">\n          Test multiple AI models with your specific use case and compare their performance.\n        </p>\n      </div>\n      \n      <div className=\"bg-white shadow-xl rounded-lg overflow-hidden mb-12\">\n        <div className=\"px-4 py-5 sm:p-6\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"space-y-6\">\n              <div>\n                <label htmlFor=\"prompt\" className=\"block text-sm font-medium text-gray-700\">\n                  What would you like to use AI for? (Describe your needs)\n                </label>\n                <div className=\"mt-1\">\n                  <textarea\n                    id=\"prompt\"\n                    name=\"prompt\"\n                    rows={4}\n                    className=\"shadow-sm focus:ring-primary-500 focus:border-primary-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                    placeholder=\"e.g., I want to build a customer service chatbot that can handle basic inquiries and route complex questions to human agents.\"\n                    value={prompt}\n                    onChange={handlePromptChange}\n                  />\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                  Select models to test\n                </label>\n                <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3\">\n                  {aiModels.map(model => {\n                    const isSupported = OPENROUTER_MODEL_MAPPING[model.id] !== undefined;\n                    return (\n                      <div key={model.id} className=\"relative flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id={`model-${model.id}`}\n                            name={`model-${model.id}`}\n                            type=\"checkbox\"\n                            checked={selectedModels.includes(model.id)}\n                            onChange={() => handleModelToggle(model.id)}\n                            className={`focus:ring-primary-500 h-4 w-4 text-primary-600 border-gray-300 rounded ${isSupported ? '' : 'opacity-50'}`}\n                            disabled={!isSupported}\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label \n                            htmlFor={`model-${model.id}`} \n                            className={`font-medium ${isSupported ? 'text-gray-700' : 'text-gray-400'}`}\n                          >\n                            {model.name} {!isSupported && '(not available)'}\n                          </label>\n                          <p className={`${isSupported ? 'text-gray-500' : 'text-gray-400'}`}>\n                            {model.provider} • {model.type}\n                          </p>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n                <p className=\"mt-2 text-xs text-gray-500\">\n                  Using OpenRouter API to access these models. Some models may not be available.\n                </p>\n              </div>\n              \n              <div>\n                <button\n                  type=\"submit\"\n                  disabled={loading}\n                  className={`w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white \n                    ${loading ? 'bg-gray-400' : 'bg-gradient-to-r from-primary-600 to-secondary-600 hover:from-primary-700 hover:to-secondary-700'} \n                    focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500`}\n                >\n                  {loading ? (\n                    <>\n                      <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                      Testing Models...\n                    </>\n                  ) : (\n                    'Test Selected Models'\n                  )}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n      \n      {isSearched && !loading && (\n        <div className=\"space-y-12\">\n          <div className=\"bg-white shadow-xl rounded-lg overflow-hidden\">\n            <div className=\"px-4 py-5 sm:p-6\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Test Results</h2>\n              \n              {results.length > 0 ? (\n                <>\n                  <p className=\"text-gray-500 mb-6\">\n                    Here are the results from testing {results.length} AI models with your prompt.\n                  </p>\n                  \n                  {/* Performance Metrics Comparison */}\n                  {results.length >= 2 && <ComparisonChart models={results.map(r => ({\n                    ...r.model,\n                    accuracy: r.metrics.quality,\n                    executionTime: parseFloat(r.metrics.executionTime),\n                    costEstimate: parseFloat(r.metrics.costEstimate) * 1000 // Convert to millicents for display\n                  }))} />}\n                  \n                  {/* Detailed Output Comparison */}\n                  <ResultsComparison results={results} prompt={prompt} />\n                </>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <p className=\"text-gray-500\">\n                    No results available. Please try testing with different models.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdvisorPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}