{"ast":null,"code":"var _jsxFileName = \"/Users/mariagorskikh/hackathon moestro/ai-model-advisor/src/components/AdvisorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { aiModels } from '../data/aiModels';\nimport ModelCard from './ModelCard';\nimport ComparisonChart from './ComparisonChart';\nimport ResultsComparison from './ResultsComparison';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdvisorPage = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [selectedModels, setSelectedModels] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isSearched, setIsSearched] = useState(false);\n  const handlePromptChange = e => {\n    setPrompt(e.target.value);\n  };\n  const handleModelToggle = modelId => {\n    setSelectedModels(prev => {\n      if (prev.includes(modelId)) {\n        return prev.filter(id => id !== modelId);\n      } else {\n        return [...prev, modelId];\n      }\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (prompt.trim() === '') {\n      alert('Please enter what you want to use AI for');\n      return;\n    }\n    if (selectedModels.length === 0) {\n      alert('Please select at least one AI model to test');\n      return;\n    }\n    setLoading(true);\n    try {\n      // This would be replaced with actual API calls to Moestro API\n      const testResults = await simulateApiCall(prompt, selectedModels);\n      setResults(testResults);\n      setIsSearched(true);\n    } catch (error) {\n      console.error('Error testing models:', error);\n      alert('An error occurred while testing the models. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Simulated API call - would be replaced with actual Moestro API integration\n  const simulateApiCall = async (userPrompt, modelIds) => {\n    // Simulate API latency\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    return modelIds.map(id => {\n      const model = aiModels.find(m => m.id === id);\n      const executionTime = Math.random() * (model.speed * 2) + 1; // Simulated execution time\n      const tokenCost = Math.random() * (model.cost * 0.01) + 0.01; // Simulated cost\n\n      return {\n        model,\n        prompt: `Based on the user request: \"${userPrompt}\", generate a solution using ${model.name}`,\n        output: `This is a simulated output from ${model.name} for the prompt: \"${userPrompt}\". \n                 In a real implementation, this would be the actual response from the model through the Moestro API.\n                 The response would be formatted according to the model's capabilities and the prompt requirements.`,\n        metrics: {\n          executionTime: executionTime.toFixed(2),\n          // seconds\n          tokenCount: Math.floor(Math.random() * 500) + 100,\n          costEstimate: tokenCost.toFixed(4),\n          // dollars\n          quality: Math.min(5, Math.floor(Math.random() * model.accuracy) + 1)\n        }\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-extrabold text-gray-900 sm:text-5xl sm:tracking-tight lg:text-6xl\",\n        children: \"Compare AI Model Outputs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-5 max-w-xl mx-auto text-xl text-gray-500\",\n        children: \"Test multiple AI models with your specific use case and compare their performance.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-xl rounded-lg overflow-hidden mb-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-5 sm:p-6\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"prompt\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"What would you like to use AI for? (Describe your needs)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1\",\n                children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"prompt\",\n                  name: \"prompt\",\n                  rows: 4,\n                  className: \"shadow-sm focus:ring-primary-500 focus:border-primary-500 block w-full sm:text-sm border-gray-300 rounded-md\",\n                  placeholder: \"e.g., I want to build a customer service chatbot that can handle basic inquiries and route complex questions to human agents.\",\n                  value: prompt,\n                  onChange: handlePromptChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-3\",\n                children: \"Select models to test\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3\",\n                children: aiModels.map(model => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relative flex items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center h-5\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: `model-${model.id}`,\n                      name: `model-${model.id}`,\n                      type: \"checkbox\",\n                      checked: selectedModels.includes(model.id),\n                      onChange: () => handleModelToggle(model.id),\n                      className: \"focus:ring-primary-500 h-4 w-4 text-primary-600 border-gray-300 rounded\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ml-3 text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: `model-${model.id}`,\n                      className: \"font-medium text-gray-700\",\n                      children: model.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-gray-500\",\n                      children: [model.provider, \" \\u2022 \", model.type]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 23\n                  }, this)]\n                }, model.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: loading,\n                className: `w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white \n                    ${loading ? 'bg-gray-400' : 'bg-gradient-to-r from-primary-600 to-secondary-600 hover:from-primary-700 hover:to-secondary-700'} \n                    focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500`,\n                children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"animate-spin -ml-1 mr-3 h-5 w-5 text-white\",\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                      className: \"opacity-25\",\n                      cx: \"12\",\n                      cy: \"12\",\n                      r: \"10\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                      className: \"opacity-75\",\n                      fill: \"currentColor\",\n                      d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 23\n                  }, this), \"Testing Models...\"]\n                }, void 0, true) : 'Test Selected Models'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), isSearched && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-xl rounded-lg overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-5 sm:p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-gray-900 mb-4\",\n            children: \"Test Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), results.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 mb-6\",\n              children: [\"Here are the results from testing \", results.length, \" AI models with your prompt.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this), results.length >= 2 && /*#__PURE__*/_jsxDEV(ComparisonChart, {\n              models: results.map(r => ({\n                ...r.model,\n                accuracy: r.metrics.quality,\n                executionTime: parseFloat(r.metrics.executionTime),\n                costEstimate: parseFloat(r.metrics.costEstimate) * 1000 // Convert to millicents for display\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(ResultsComparison, {\n              results: results,\n              prompt: prompt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-12\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500\",\n              children: \"No results available. Please try testing with different models.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvisorPage, \"lageKY/qhhzODnS/ElshldXExVM=\");\n_c = AdvisorPage;\nexport default AdvisorPage;\nvar _c;\n$RefreshReg$(_c, \"AdvisorPage\");","map":{"version":3,"names":["React","useState","aiModels","ModelCard","ComparisonChart","ResultsComparison","jsxDEV","_jsxDEV","Fragment","_Fragment","AdvisorPage","_s","prompt","setPrompt","selectedModels","setSelectedModels","results","setResults","loading","setLoading","isSearched","setIsSearched","handlePromptChange","e","target","value","handleModelToggle","modelId","prev","includes","filter","id","handleSubmit","preventDefault","trim","alert","length","testResults","simulateApiCall","error","console","userPrompt","modelIds","Promise","resolve","setTimeout","map","model","find","m","executionTime","Math","random","speed","tokenCost","cost","name","output","metrics","toFixed","tokenCount","floor","costEstimate","quality","min","accuracy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","rows","placeholder","onChange","type","checked","provider","disabled","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","models","parseFloat","_c","$RefreshReg$"],"sources":["/Users/mariagorskikh/hackathon moestro/ai-model-advisor/src/components/AdvisorPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { aiModels } from '../data/aiModels';\nimport ModelCard from './ModelCard';\nimport ComparisonChart from './ComparisonChart';\nimport ResultsComparison from './ResultsComparison';\n\nconst AdvisorPage = () => {\n  const [prompt, setPrompt] = useState('');\n  const [selectedModels, setSelectedModels] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isSearched, setIsSearched] = useState(false);\n  \n  const handlePromptChange = (e) => {\n    setPrompt(e.target.value);\n  };\n  \n  const handleModelToggle = (modelId) => {\n    setSelectedModels(prev => {\n      if (prev.includes(modelId)) {\n        return prev.filter(id => id !== modelId);\n      } else {\n        return [...prev, modelId];\n      }\n    });\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (prompt.trim() === '') {\n      alert('Please enter what you want to use AI for');\n      return;\n    }\n    \n    if (selectedModels.length === 0) {\n      alert('Please select at least one AI model to test');\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      // This would be replaced with actual API calls to Moestro API\n      const testResults = await simulateApiCall(prompt, selectedModels);\n      setResults(testResults);\n      setIsSearched(true);\n    } catch (error) {\n      console.error('Error testing models:', error);\n      alert('An error occurred while testing the models. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Simulated API call - would be replaced with actual Moestro API integration\n  const simulateApiCall = async (userPrompt, modelIds) => {\n    // Simulate API latency\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    \n    return modelIds.map(id => {\n      const model = aiModels.find(m => m.id === id);\n      const executionTime = Math.random() * (model.speed * 2) + 1; // Simulated execution time\n      const tokenCost = Math.random() * (model.cost * 0.01) + 0.01; // Simulated cost\n      \n      return {\n        model,\n        prompt: `Based on the user request: \"${userPrompt}\", generate a solution using ${model.name}`,\n        output: `This is a simulated output from ${model.name} for the prompt: \"${userPrompt}\". \n                 In a real implementation, this would be the actual response from the model through the Moestro API.\n                 The response would be formatted according to the model's capabilities and the prompt requirements.`,\n        metrics: {\n          executionTime: executionTime.toFixed(2), // seconds\n          tokenCount: Math.floor(Math.random() * 500) + 100,\n          costEstimate: tokenCost.toFixed(4), // dollars\n          quality: Math.min(5, Math.floor(Math.random() * model.accuracy) + 1)\n        }\n      };\n    });\n  };\n  \n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <div className=\"text-center mb-12\">\n        <h1 className=\"text-4xl font-extrabold text-gray-900 sm:text-5xl sm:tracking-tight lg:text-6xl\">\n          Compare AI Model Outputs\n        </h1>\n        <p className=\"mt-5 max-w-xl mx-auto text-xl text-gray-500\">\n          Test multiple AI models with your specific use case and compare their performance.\n        </p>\n      </div>\n      \n      <div className=\"bg-white shadow-xl rounded-lg overflow-hidden mb-12\">\n        <div className=\"px-4 py-5 sm:p-6\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"space-y-6\">\n              <div>\n                <label htmlFor=\"prompt\" className=\"block text-sm font-medium text-gray-700\">\n                  What would you like to use AI for? (Describe your needs)\n                </label>\n                <div className=\"mt-1\">\n                  <textarea\n                    id=\"prompt\"\n                    name=\"prompt\"\n                    rows={4}\n                    className=\"shadow-sm focus:ring-primary-500 focus:border-primary-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                    placeholder=\"e.g., I want to build a customer service chatbot that can handle basic inquiries and route complex questions to human agents.\"\n                    value={prompt}\n                    onChange={handlePromptChange}\n                  />\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                  Select models to test\n                </label>\n                <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3\">\n                  {aiModels.map(model => (\n                    <div key={model.id} className=\"relative flex items-start\">\n                      <div className=\"flex items-center h-5\">\n                        <input\n                          id={`model-${model.id}`}\n                          name={`model-${model.id}`}\n                          type=\"checkbox\"\n                          checked={selectedModels.includes(model.id)}\n                          onChange={() => handleModelToggle(model.id)}\n                          className=\"focus:ring-primary-500 h-4 w-4 text-primary-600 border-gray-300 rounded\"\n                        />\n                      </div>\n                      <div className=\"ml-3 text-sm\">\n                        <label htmlFor={`model-${model.id}`} className=\"font-medium text-gray-700\">{model.name}</label>\n                        <p className=\"text-gray-500\">{model.provider} • {model.type}</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              \n              <div>\n                <button\n                  type=\"submit\"\n                  disabled={loading}\n                  className={`w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white \n                    ${loading ? 'bg-gray-400' : 'bg-gradient-to-r from-primary-600 to-secondary-600 hover:from-primary-700 hover:to-secondary-700'} \n                    focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500`}\n                >\n                  {loading ? (\n                    <>\n                      <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                      Testing Models...\n                    </>\n                  ) : (\n                    'Test Selected Models'\n                  )}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n      \n      {isSearched && !loading && (\n        <div className=\"space-y-12\">\n          <div className=\"bg-white shadow-xl rounded-lg overflow-hidden\">\n            <div className=\"px-4 py-5 sm:p-6\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Test Results</h2>\n              \n              {results.length > 0 ? (\n                <>\n                  <p className=\"text-gray-500 mb-6\">\n                    Here are the results from testing {results.length} AI models with your prompt.\n                  </p>\n                  \n                  {/* Performance Metrics Comparison */}\n                  {results.length >= 2 && <ComparisonChart models={results.map(r => ({\n                    ...r.model,\n                    accuracy: r.metrics.quality,\n                    executionTime: parseFloat(r.metrics.executionTime),\n                    costEstimate: parseFloat(r.metrics.costEstimate) * 1000 // Convert to millicents for display\n                  }))} />}\n                  \n                  {/* Detailed Output Comparison */}\n                  <ResultsComparison results={results} prompt={prompt} />\n                </>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <p className=\"text-gray-500\">\n                    No results available. Please try testing with different models.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdvisorPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}